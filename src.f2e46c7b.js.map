{"version":3,"sources":["js/countdown-timer.js","index.js"],"names":["refs","timer","document","querySelector","days","hours","mins","seconds","CountdownTimer","constructor","selector","targetDate","setInterval","updateTimer","clearTimer","currDate","Date","now","time","pad","Math","floor","textContent","value","String","padStart","clearInterval","setInt"],"mappings":";;;AAkDA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAjDA,MAAMA,EAAO,CACXC,MAAOC,SAASC,cAAc,YAC9BC,KAAMF,SAASC,cAAc,uBAC7BE,MAAOH,SAASC,cAAc,wBAC9BG,KAAMJ,SAASC,cAAc,uBAC7BI,QAASL,SAASC,cAAc,wBAIlC,MAAMK,EACJC,aAAY,SAAEC,EAAF,WAAYC,IA4BfC,EAAAA,KAAAA,SAAAA,YAAY,KACdC,KAAAA,cACAC,KAAAA,cACJ,MA9BIJ,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EAGpBE,cACQE,MAAAA,EAAWC,KAAKC,MAChBC,EAAO,KAAKP,WAAaI,EACzBX,EAAO,KAAKe,IAAIC,KAAKC,MAAMH,EAAQ,QACnCb,EAAQ,KAAKc,IAAIC,KAAKC,MAAOH,EAAQ,MAAyB,OAC9DZ,EAAO,KAAKa,IAAIC,KAAKC,MAAOH,EAAQ,KAAoB,MACxDX,EAAU,KAAKY,IAAIC,KAAKC,MAAOH,EAAQ,IAAc,MAC3DlB,EAAKI,KAAKkB,eAAiBlB,IAC3BJ,EAAKK,MAAMiB,eAAiBjB,IAC5BL,EAAKM,KAAKgB,eAAiBhB,IAC3BN,EAAKO,QAAQe,eAAiBf,IAGhCY,IAAII,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAGnCX,WAAWI,GACL,KAAKP,WAAaK,KAAKC,MAAQ,GACjCS,cAAc,KAAKC,SAWzB,MAAM1B,EAAQ,IAAIO,EAAe,CAC/BE,SAAU,WACVC,WAAY,IAAIK,KAAK,kBAEvBf,EAAMY;;ACjDN,aADA,QAAA,oBACA,QAAA","file":"src.f2e46c7b.js","sourceRoot":"../src","sourcesContent":["// refs:\nconst refs = {\n  timer: document.querySelector('#timer-1'),\n  days: document.querySelector('[data-value=\"days\"]'),\n  hours: document.querySelector('[data-value=\"hours\"]'),\n  mins: document.querySelector('[data-value=\"mins\"]'),\n  seconds: document.querySelector('[data-value=\"secs\"]'),\n};\n\n// creating timer class:\nclass CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.selector = selector;\n    this.targetDate = targetDate;\n  }\n  //\n  updateTimer() {\n    const currDate = Date.now();\n    const time = this.targetDate - currDate;\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const seconds = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n    refs.days.textContent = `${days}`;\n    refs.hours.textContent = `${hours}`;\n    refs.mins.textContent = `${mins}`;\n    refs.seconds.textContent = `${seconds}`;\n  }\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n\n  clearTimer(time) {\n    if (this.targetDate - Date.now() < 0) {\n      clearInterval(this.setInt);\n    }\n  }\n\n  setInt = setInterval(() => {\n    this.updateTimer();\n    this.clearTimer();\n  }, 1000);\n}\n\n// create and load countdown timer for our wedding day ^.^\nconst timer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Aug 27, 2021'),\n});\ntimer.updateTimer();\n","import './sass/main.scss';\nimport './js/countdown-timer';\n"]}